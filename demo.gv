digraph "implicit-searches-1509976794205" { 	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]]"
	"io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.Nil.type]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]]"
	"io.circe.Decoder[Foo]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]]"
	"io.circe.Decoder[scala.collection.immutable.Nil.type]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]]"
	"io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]]"
	"io.circe.Encoder[Foo]" -> "io.circe.Encoder[scala.collection.immutable.Nil.type]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.Encoder[scala.collection.immutable.Nil.type]"
	"io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "io.circe.Encoder[scala.collection.immutable.Nil.type]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.Encoder[scala.collection.immutable.Nil.type]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[this.Out]]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[this.Out]]"
	"io.circe.generic.decoding.DerivedDecoder[List[String]]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[this.Out]]"
	"io.circe.generic.decoding.DerivedDecoder[Foo]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[this.Out]]"
	"io.circe.Decoder[Foo]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[this.Out]]"
	"io.circe.generic.decoding.DerivedDecoder[Qux]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[this.Out]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[this.Out]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[String,R]"
	"io.circe.Encoder[Foo]" -> "shapeless.LabelledGeneric.Aux[String,R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[String]" -> "shapeless.LabelledGeneric.Aux[String,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[String,R]"
	"io.circe.generic.decoding.DerivedDecoder[String]" -> "shapeless.LabelledGeneric.Aux[String,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.LabelledGeneric.Aux[String,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[String,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[String,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.Nil.type]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]]"
	"io.circe.Encoder[scala.collection.immutable.Nil.type]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]]"
	"io.circe.Encoder[Foo]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]]"
	"io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]]"
	"io.circe.Encoder[String]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.Encoder[List[String]]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[String]]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.Encoder[Foo]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.generic.decoding.ReprDecoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]" -> "io.circe.Decoder[Option[Double]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.Decoder[Option[Double]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.Decoder[Option[Double]]"
	"io.circe.Decoder[Foo]" -> "io.circe.Decoder[Option[Double]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[Qux]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[Qux]]"
	"io.circe.Decoder[Foo]" -> "io.circe.export.Exported[io.circe.Decoder[Qux]]"
	"io.circe.generic.decoding.ReprDecoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "io.circe.export.Exported[io.circe.Decoder[Qux]]"
	"io.circe.Decoder[Qux]" -> "io.circe.export.Exported[io.circe.Decoder[Qux]]"
	"io.circe.generic.decoding.ReprDecoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Qux]]"
	"io.circe.Decoder[Foo]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Qux]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Qux]]"
	"io.circe.export.Exported[io.circe.Decoder[Qux]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Qux]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Qux]]"
	"io.circe.Decoder[Qux]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Qux]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.generic.decoding.DerivedDecoder[Bar]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.Decoder[Foo]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[String]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.DerivedObjectEncoder[String]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[String]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"shapeless.LabelledGeneric.Aux[List[String],R]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"shapeless.LabelledGeneric.Aux[Foo,R]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"io.circe.generic.decoding.DerivedDecoder[List[String]]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"io.circe.generic.encoding.DerivedObjectEncoder[List[String]]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"io.circe.generic.decoding.DerivedDecoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]"
	"io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[List[String]]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[List[String]]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[List[String]]]"
	"io.circe.generic.encoding.ReprObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[List[String]]]"
	"io.circe.Encoder[List[String]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[List[String]]]"
	"io.circe.Encoder[Foo]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[List[String]]]"
	"io.circe.Encoder[Foo]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]"
	"io.circe.Decoder[Option[Double]]" -> "io.circe.Decoder[Double]"
	"io.circe.Decoder[Foo]" -> "io.circe.Decoder[Double]"
	"io.circe.generic.decoding.ReprDecoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]" -> "io.circe.Decoder[Double]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.Decoder[Double]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.Decoder[Double]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.Decoder[List[String]]"
	"io.circe.generic.decoding.ReprDecoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]" -> "io.circe.Decoder[List[String]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.Decoder[List[String]]"
	"io.circe.Decoder[Foo]" -> "io.circe.Decoder[List[String]]"
	"io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "io.circe.Decoder[List[String]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.ReprDecoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.Decoder[Int]"
	"io.circe.Decoder[Foo]" -> "io.circe.Decoder[Int]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.Decoder[Int]"
	"io.circe.generic.decoding.ReprDecoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]" -> "io.circe.Decoder[Int]"
	"io.circe.Encoder[Foo]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[Bar]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[Bar]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[Bar]]"
	"io.circe.generic.encoding.ReprObjectEncoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[Bar]]"
	"io.circe.Encoder[Bar]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[Bar]]"
	"io.circe.Decoder[scala.collection.immutable.::[String]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]]"
	"io.circe.Decoder[Foo]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]]"
	"io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]]"
	"io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.::[String]]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]]"
	"io.circe.Encoder[Foo]" -> "shapeless.Generic.Aux[List[String],V]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Generic.Aux[List[String],V]"
	"io.circe.Decoder[Foo]" -> "shapeless.Generic.Aux[List[String],V]"
	"io.circe.generic.decoding.DerivedDecoder[List[String]]" -> "shapeless.Generic.Aux[List[String],V]"
	"shapeless.LabelledGeneric.Aux[List[String],R]" -> "shapeless.Generic.Aux[List[String],V]"
	"io.circe.generic.encoding.DerivedObjectEncoder[List[String]]" -> "shapeless.Generic.Aux[List[String],V]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[List[String],V]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[List[String],V]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Generic.Aux[List[String],V]"
	"io.circe.Decoder[Foo]" -> "io.circe.export.Exported[io.circe.Decoder[Foo]]"
	"io.circe.Decoder[String]" -> "Unit => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.Decoder[List[String]]" -> "Unit => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "Unit => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.export.Exported[io.circe.Decoder[String]]" -> "Unit => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "Unit => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "Unit => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.Decoder[Foo]" -> "Unit => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.Encoder[List[String]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[String]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.Encoder[Foo]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.Encoder[String]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[List[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[List[String]]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.DerivedObjectEncoder[List[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[Bar]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[Bar]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.DerivedObjectEncoder[Bar]"
	"io.circe.Decoder[Foo]" -> "io.circe.export.Exported[io.circe.Decoder[Bar]]"
	"io.circe.Decoder[Bar]" -> "io.circe.export.Exported[io.circe.Decoder[Bar]]"
	"io.circe.generic.decoding.ReprDecoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "io.circe.export.Exported[io.circe.Decoder[Bar]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[Bar]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[Bar]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (List[String] :: shapeless.HNil)"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (List[String] :: shapeless.HNil)"
	"io.circe.Encoder[Foo]" -> "shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (List[String] :: shapeless.HNil)"
	"io.circe.Decoder[Foo]" -> "shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (List[String] :: shapeless.HNil)"
	"io.circe.generic.encoding.DerivedObjectEncoder[Bar]" -> "shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (List[String] :: shapeless.HNil)"
	"shapeless.LabelledGeneric.Aux[Bar,R]" -> "shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (List[String] :: shapeless.HNil)"
	"io.circe.generic.decoding.DerivedDecoder[Bar]" -> "shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (List[String] :: shapeless.HNil)"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (List[String] :: shapeless.HNil)"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (List[String] :: shapeless.HNil)"
	"io.circe.generic.decoding.DerivedDecoder[Bar]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"shapeless.LabelledGeneric.Aux[Bar,R]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"shapeless.LabelledGeneric.Aux[Qux,R]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Qux]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Bar]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"io.circe.generic.decoding.DerivedDecoder[Qux]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('xs')) :: shapeless.HNil,List[String] :: shapeless.HNil,R]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]"
	"io.circe.Decoder[Foo]" -> "io.circe.Decoder[Qux]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.Decoder[Qux]"
	"io.circe.generic.decoding.ReprDecoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "io.circe.Decoder[Qux]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.Decoder[Qux]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R]"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Qux,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.LabelledGeneric.Aux[Qux,R]"
	"io.circe.Encoder[Foo]" -> "shapeless.LabelledGeneric.Aux[Qux,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Qux,R]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Qux,R]"
	"io.circe.generic.decoding.DerivedDecoder[Qux]" -> "shapeless.LabelledGeneric.Aux[Qux,R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Qux]" -> "shapeless.LabelledGeneric.Aux[Qux,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Qux,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]]"
	"io.circe.Encoder[scala.collection.immutable.::[String]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.::[String]]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]]"
	"io.circe.Encoder[Foo]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]]"
	"io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]]"
	"io.circe.Decoder[Foo]" -> "io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.Nil.type]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.Nil.type]]"
	"io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.Nil.type]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.Nil.type]]"
	"io.circe.Decoder[scala.collection.immutable.Nil.type]" -> "io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.Nil.type]]"
	"shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]" -> "shapeless.Witness.Aux[Symbol @@ String('Nil')]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Nil')]"
	"io.circe.Encoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('Nil')]"
	"io.circe.generic.encoding.DerivedObjectEncoder[List[String]]" -> "shapeless.Witness.Aux[Symbol @@ String('Nil')]"
	"io.circe.Decoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('Nil')]"
	"shapeless.LabelledGeneric.Aux[List[String],R]" -> "shapeless.Witness.Aux[Symbol @@ String('Nil')]"
	"io.circe.generic.decoding.DerivedDecoder[List[String]]" -> "shapeless.Witness.Aux[Symbol @@ String('Nil')]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Nil')]"
	"shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]" -> "shapeless.Witness.Aux[Symbol @@ String('Nil')]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Nil')]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Nil')]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]"
	"io.circe.Encoder[Foo]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]"
	"io.circe.Encoder[Foo]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.::[String]]]"
	"io.circe.Encoder[scala.collection.immutable.::[String]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.::[String]]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.::[String]]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.::[String]]]"
	"io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.::[String]]]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]"
	"io.circe.generic.decoding.DerivedDecoder[Bar]" -> "shapeless.LabelledGeneric.Aux[Bar,R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Bar]" -> "shapeless.LabelledGeneric.Aux[Bar,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Bar,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Bar,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.LabelledGeneric.Aux[Bar,R]"
	"io.circe.Encoder[Foo]" -> "shapeless.LabelledGeneric.Aux[Bar,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Bar,R]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Bar,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]"
	"io.circe.Decoder[Foo]" -> "io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.::[String]]]"
	"io.circe.Decoder[scala.collection.immutable.::[String]]" -> "io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.::[String]]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.::[String]]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.::[String]]]"
	"io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.::[String]]]"
	"io.circe.generic.encoding.ReprObjectEncoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]" -> "io.circe.Encoder[Int]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.Encoder[Int]"
	"io.circe.Encoder[Foo]" -> "io.circe.Encoder[Int]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.Encoder[Int]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.export.Exported[io.circe.Decoder[String]]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.Decoder[Foo]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.Decoder[List[String]]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.Decoder[String]" -> "(=> Unit) => shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]"
	"shapeless.LabelledGeneric.Aux[Foo,R]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]"
	"shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]"
	"io.circe.generic.decoding.DerivedDecoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]"
	"io.circe.Decoder[Foo]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Bar]]"
	"io.circe.export.Exported[io.circe.Decoder[Bar]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Bar]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Bar]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Bar]]"
	"io.circe.generic.decoding.ReprDecoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Bar]]"
	"io.circe.Decoder[Bar]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Bar]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]"
	"shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]" -> "shapeless.Witness.Aux[Symbol @@ String('i')]"
	"io.circe.Encoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('i')]"
	"io.circe.Decoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('i')]"
	"io.circe.generic.decoding.DerivedDecoder[Qux]" -> "shapeless.Witness.Aux[Symbol @@ String('i')]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('i')]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Qux]" -> "shapeless.Witness.Aux[Symbol @@ String('i')]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('i')]"
	"shapeless.LabelledGeneric.Aux[Qux,R]" -> "shapeless.Witness.Aux[Symbol @@ String('i')]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('i')]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('i')]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.DerivedObjectEncoder[Foo]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[Foo]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[Foo]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('::')]"
	"io.circe.generic.decoding.DerivedDecoder[List[String]]" -> "shapeless.Witness.Aux[Symbol @@ String('::')]"
	"io.circe.Encoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('::')]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('::')]"
	"io.circe.Decoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('::')]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('::')]"
	"shapeless.LabelledGeneric.Aux[List[String],R]" -> "shapeless.Witness.Aux[Symbol @@ String('::')]"
	"shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]" -> "shapeless.Witness.Aux[Symbol @@ String('::')]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('::')]"
	"io.circe.generic.encoding.DerivedObjectEncoder[List[String]]" -> "shapeless.Witness.Aux[Symbol @@ String('::')]"
	"io.circe.Encoder[Foo]" -> "shapeless.LabelledGeneric.Aux[Foo,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Foo,R]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Foo,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Foo,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[Foo,R]"
	"io.circe.generic.decoding.DerivedDecoder[Foo]" -> "shapeless.LabelledGeneric.Aux[Foo,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.LabelledGeneric.Aux[Foo,R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Foo]" -> "shapeless.LabelledGeneric.Aux[Foo,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Qux]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Qux]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Qux]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Qux]]"
	"io.circe.generic.encoding.ReprObjectEncoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Qux]]"
	"io.circe.Encoder[Qux]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Qux]]"
	"io.circe.Encoder[Foo]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Qux]]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.ReprObjectEncoder[shapeless.HNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[shapeless.HNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.::[String],K]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.::[String],K]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.::[String],K]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.::[String],K]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.::[String],K]"
	"io.circe.Decoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.::[String],K]"
	"io.circe.Encoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.::[String],K]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.::[String],K]"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.::[String],K]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.DerivedObjectEncoder[Qux]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[Qux]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[Qux]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]"
	"io.circe.generic.decoding.DerivedDecoder[Qux]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]"
	"shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Qux]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]"
	"shapeless.LabelledGeneric.Aux[Qux,R]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.Encoder[scala.collection.immutable.::[String]]"
	"io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "io.circe.Encoder[scala.collection.immutable.::[String]]"
	"io.circe.Encoder[Foo]" -> "io.circe.Encoder[scala.collection.immutable.::[String]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.Encoder[scala.collection.immutable.::[String]]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.DerivedDecoder[List[String]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[List[String]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[List[String]]"
	"io.circe.generic.encoding.ReprObjectEncoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "io.circe.Encoder[Qux]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.Encoder[Qux]"
	"io.circe.Encoder[Foo]" -> "io.circe.Encoder[Qux]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.Encoder[Qux]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.Decoder[scala.collection.immutable.Nil.type]"
	"io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "io.circe.Decoder[scala.collection.immutable.Nil.type]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.Decoder[scala.collection.immutable.Nil.type]"
	"io.circe.Decoder[Foo]" -> "io.circe.Decoder[scala.collection.immutable.Nil.type]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('xs')) :: shapeless.HNil,List[String] :: shapeless.HNil,R]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('xs')) :: shapeless.HNil,List[String] :: shapeless.HNil,R]"
	"shapeless.LabelledGeneric.Aux[Bar,R]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('xs')) :: shapeless.HNil,List[String] :: shapeless.HNil,R]"
	"io.circe.generic.decoding.DerivedDecoder[Bar]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('xs')) :: shapeless.HNil,List[String] :: shapeless.HNil,R]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('xs')) :: shapeless.HNil,List[String] :: shapeless.HNil,R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Bar]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('xs')) :: shapeless.HNil,List[String] :: shapeless.HNil,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('xs')) :: shapeless.HNil,List[String] :: shapeless.HNil,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('xs')) :: shapeless.HNil,List[String] :: shapeless.HNil,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('xs')) :: shapeless.HNil,List[String] :: shapeless.HNil,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Bar]]"
	"io.circe.generic.encoding.ReprObjectEncoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Bar]]"
	"io.circe.Encoder[Bar]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Bar]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Bar]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Bar]]"
	"io.circe.Encoder[Foo]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Bar]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Bar]]"
	"shapeless.LabelledGeneric.Aux[Qux,R]" -> "this.Out <:< (Int :: Option[Double] :: shapeless.HNil)"
	"io.circe.generic.decoding.DerivedDecoder[Qux]" -> "this.Out <:< (Int :: Option[Double] :: shapeless.HNil)"
	"io.circe.generic.encoding.DerivedObjectEncoder[Qux]" -> "this.Out <:< (Int :: Option[Double] :: shapeless.HNil)"
	"io.circe.Decoder[Foo]" -> "this.Out <:< (Int :: Option[Double] :: shapeless.HNil)"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "this.Out <:< (Int :: Option[Double] :: shapeless.HNil)"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "this.Out <:< (Int :: Option[Double] :: shapeless.HNil)"
	"io.circe.Encoder[Foo]" -> "this.Out <:< (Int :: Option[Double] :: shapeless.HNil)"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "this.Out <:< (Int :: Option[Double] :: shapeless.HNil)"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "this.Out <:< (Int :: Option[Double] :: shapeless.HNil)"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.ReprObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]"
	"io.circe.Decoder[Foo]" -> "io.circe.Decoder[scala.collection.immutable.::[String]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.Decoder[scala.collection.immutable.::[String]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.Decoder[scala.collection.immutable.::[String]]"
	"io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "io.circe.Decoder[scala.collection.immutable.::[String]]"
	"io.circe.Encoder[Foo]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[Bar]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.DerivedDecoder[Bar]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[Bar]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]"
	"io.circe.generic.decoding.DerivedDecoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]"
	"shapeless.LabelledGeneric.Aux[Foo,R]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.Encoder[Option[Double]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.Encoder[Option[Double]]"
	"io.circe.generic.encoding.ReprObjectEncoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]" -> "io.circe.Encoder[Option[Double]]"
	"io.circe.Encoder[Foo]" -> "io.circe.Encoder[Option[Double]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "this.Out <:< (scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil)"
	"io.circe.Encoder[Foo]" -> "this.Out <:< (scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil)"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "this.Out <:< (scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil)"
	"shapeless.LabelledGeneric.Aux[List[String],R]" -> "this.Out <:< (scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil)"
	"io.circe.generic.encoding.DerivedObjectEncoder[List[String]]" -> "this.Out <:< (scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil)"
	"io.circe.generic.decoding.DerivedDecoder[List[String]]" -> "this.Out <:< (scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil)"
	"io.circe.Decoder[Foo]" -> "this.Out <:< (scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil)"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "this.Out <:< (scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil)"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "this.Out <:< (scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil)"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('tl$access$1')]"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]" -> "shapeless.Witness.Aux[Symbol @@ String('tl$access$1')]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('tl$access$1')]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('tl$access$1')]"
	"shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]" -> "shapeless.Witness.Aux[Symbol @@ String('tl$access$1')]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('tl$access$1')]"
	"shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]" -> "shapeless.Witness.Aux[Symbol @@ String('tl$access$1')]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]" -> "shapeless.Witness.Aux[Symbol @@ String('tl$access$1')]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]" -> "shapeless.Witness.Aux[Symbol @@ String('tl$access$1')]"
	"io.circe.Encoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('tl$access$1')]"
	"io.circe.Decoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('tl$access$1')]"
	"shapeless.LabelledGeneric.Aux[Bar,R]" -> "shapeless.DefaultSymbolicLabelling.Aux[Bar,K]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Bar,K]"
	"io.circe.Decoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[Bar,K]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Bar,K]"
	"io.circe.Encoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[Bar,K]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Bar,K]"
	"io.circe.generic.decoding.DerivedDecoder[Bar]" -> "shapeless.DefaultSymbolicLabelling.Aux[Bar,K]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Bar]" -> "shapeless.DefaultSymbolicLabelling.Aux[Bar,K]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Bar,K]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "scala.collection.generic.CanBuildFrom[Nothing,String,scala.collection.immutable.::[String]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "scala.collection.generic.CanBuildFrom[Nothing,String,scala.collection.immutable.::[String]]"
	"io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "scala.collection.generic.CanBuildFrom[Nothing,String,scala.collection.immutable.::[String]]"
	"io.circe.Decoder[Foo]" -> "scala.collection.generic.CanBuildFrom[Nothing,String,scala.collection.immutable.::[String]]"
	"io.circe.Decoder[scala.collection.immutable.::[String]]" -> "scala.collection.generic.CanBuildFrom[Nothing,String,scala.collection.immutable.::[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]"
	"io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[List[String]]]"
	"io.circe.Encoder[Foo]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[List[String]]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[List[String]]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[List[String]]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[List[String]]]"
	"io.circe.Encoder[List[String]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[List[String]]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[List[String]]]"
	"io.circe.generic.encoding.ReprObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]" -> "shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[List[String]]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Bar]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.Encoder[Foo]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[shapeless.labelled.FieldType[Symbol @@ String('xs'),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.Encoder[String]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.Encoder[String]"
	"io.circe.Encoder[scala.collection.immutable.::[String]]" -> "io.circe.Encoder[String]"
	"io.circe.Encoder[List[String]]" -> "io.circe.Encoder[String]"
	"io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "io.circe.Encoder[String]"
	"io.circe.Encoder[Foo]" -> "io.circe.Encoder[String]"
	"io.circe.generic.encoding.ReprObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]" -> "io.circe.Encoder[String]"
	"io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "io.circe.Encoder[String]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('xs')]"
	"io.circe.generic.decoding.DerivedDecoder[Bar]" -> "shapeless.Witness.Aux[Symbol @@ String('xs')]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Bar]" -> "shapeless.Witness.Aux[Symbol @@ String('xs')]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('xs')]"
	"shapeless.LabelledGeneric.Aux[Bar,R]" -> "shapeless.Witness.Aux[Symbol @@ String('xs')]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('xs')]"
	"io.circe.Decoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('xs')]"
	"shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('xs')) :: shapeless.HNil,List[String] :: shapeless.HNil,R]" -> "shapeless.Witness.Aux[Symbol @@ String('xs')]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('xs')]"
	"io.circe.Encoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('xs')]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[shapeless.HNil]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.ReprDecoder[shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.Decoder[Bar]"
	"io.circe.Decoder[Foo]" -> "io.circe.Decoder[Bar]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.Decoder[Bar]"
	"io.circe.generic.decoding.ReprDecoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "io.circe.Decoder[Bar]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.function.FnFromProduct.Aux[P => A,String]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.function.FnFromProduct.Aux[P => A,String]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.function.FnFromProduct.Aux[P => A,String]"
	"io.circe.generic.decoding.DerivedDecoder[String]" -> "shapeless.ops.function.FnFromProduct.Aux[P => A,String]"
	"io.circe.export.Exported[io.circe.Decoder[String]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.Decoder[Foo]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.Decoder[List[String]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.Decoder[String]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]]"
	"io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "io.circe.Decoder[String]"
	"io.circe.Decoder[Foo]" -> "io.circe.Decoder[String]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.Decoder[String]"
	"io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "io.circe.Decoder[String]"
	"io.circe.Decoder[List[String]]" -> "io.circe.Decoder[String]"
	"io.circe.Decoder[scala.collection.immutable.::[String]]" -> "io.circe.Decoder[String]"
	"io.circe.generic.decoding.ReprDecoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]" -> "io.circe.Decoder[String]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.Decoder[String]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[List[String],K]"
	"io.circe.Encoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[List[String],K]"
	"shapeless.LabelledGeneric.Aux[List[String],R]" -> "shapeless.DefaultSymbolicLabelling.Aux[List[String],K]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[List[String],K]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[List[String],K]"
	"io.circe.generic.encoding.DerivedObjectEncoder[List[String]]" -> "shapeless.DefaultSymbolicLabelling.Aux[List[String],K]"
	"io.circe.generic.decoding.DerivedDecoder[List[String]]" -> "shapeless.DefaultSymbolicLabelling.Aux[List[String],K]"
	"io.circe.Decoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[List[String],K]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[List[String],K]"
	"io.circe.generic.decoding.DerivedDecoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[Foo,K]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[Foo,K]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Foo,K]"
	"io.circe.Decoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[Foo,K]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Foo,K]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Foo,K]"
	"io.circe.Encoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[Foo,K]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Foo,K]"
	"shapeless.LabelledGeneric.Aux[Foo,R]" -> "shapeless.DefaultSymbolicLabelling.Aux[Foo,K]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.Nil.type,K]"
	"io.circe.Encoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.Nil.type,K]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.Nil.type,K]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.Nil.type,K]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.Nil.type,K]"
	"io.circe.Decoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.Nil.type,K]"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.Nil.type,K]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.Nil.type,K]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.Nil.type,K]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "Unit => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.Encoder[List[String]]" -> "Unit => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "Unit => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "Unit => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[String]]" -> "Unit => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.Encoder[Foo]" -> "Unit => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"io.circe.Encoder[String]" -> "Unit => shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]"
	"shapeless.LabelledGeneric.Aux[Qux,R]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]"
	"io.circe.generic.decoding.DerivedDecoder[Qux]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Qux]" -> "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]"
	"io.circe.Encoder[Foo]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.ReprDecoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.ReprDecoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.ReprDecoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]"
	"shapeless.LabelledGeneric.Aux[String,R]" -> "shapeless.DefaultSymbolicLabelling.Aux[String,K]"
	"io.circe.generic.encoding.DerivedObjectEncoder[String]" -> "shapeless.DefaultSymbolicLabelling.Aux[String,K]"
	"io.circe.Encoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[String,K]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[String,K]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[String,K]"
	"io.circe.Decoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[String,K]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[String,K]"
	"io.circe.generic.decoding.DerivedDecoder[String]" -> "shapeless.DefaultSymbolicLabelling.Aux[String,K]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[String,K]"
	"io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "io.circe.export.Exported[io.circe.Decoder[List[String]]]"
	"io.circe.Decoder[Foo]" -> "io.circe.export.Exported[io.circe.Decoder[List[String]]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[List[String]]]"
	"io.circe.Decoder[List[String]]" -> "io.circe.export.Exported[io.circe.Decoder[List[String]]]"
	"io.circe.generic.decoding.ReprDecoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]" -> "io.circe.export.Exported[io.circe.Decoder[List[String]]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[List[String]]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "this.Out <:< (Bar :+: Qux :+: shapeless.CNil)"
	"io.circe.Decoder[Foo]" -> "this.Out <:< (Bar :+: Qux :+: shapeless.CNil)"
	"io.circe.generic.decoding.DerivedDecoder[Foo]" -> "this.Out <:< (Bar :+: Qux :+: shapeless.CNil)"
	"io.circe.Encoder[Foo]" -> "this.Out <:< (Bar :+: Qux :+: shapeless.CNil)"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "this.Out <:< (Bar :+: Qux :+: shapeless.CNil)"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "this.Out <:< (Bar :+: Qux :+: shapeless.CNil)"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "this.Out <:< (Bar :+: Qux :+: shapeless.CNil)"
	"io.circe.generic.encoding.DerivedObjectEncoder[Foo]" -> "this.Out <:< (Bar :+: Qux :+: shapeless.CNil)"
	"shapeless.LabelledGeneric.Aux[Foo,R]" -> "this.Out <:< (Bar :+: Qux :+: shapeless.CNil)"
	"shapeless.LabelledGeneric.Aux[List[String],R]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]"
	"io.circe.generic.decoding.DerivedDecoder[List[String]]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[List[String]]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[List[String]]]"
	"io.circe.Decoder[List[String]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[List[String]]]"
	"io.circe.generic.decoding.ReprDecoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[List[String]]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[List[String]]]"
	"io.circe.Decoder[Foo]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[List[String]]]"
	"io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[List[String]]]"
	"io.circe.export.Exported[io.circe.Decoder[List[String]]]" -> "shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[List[String]]]"
	"io.circe.Decoder[Foo]" -> "this.Out <:< (String :: List[String] :: shapeless.HNil)"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]" -> "this.Out <:< (String :: List[String] :: shapeless.HNil)"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "this.Out <:< (String :: List[String] :: shapeless.HNil)"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "this.Out <:< (String :: List[String] :: shapeless.HNil)"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "this.Out <:< (String :: List[String] :: shapeless.HNil)"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "this.Out <:< (String :: List[String] :: shapeless.HNil)"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]" -> "this.Out <:< (String :: List[String] :: shapeless.HNil)"
	"io.circe.Encoder[Foo]" -> "this.Out <:< (String :: List[String] :: shapeless.HNil)"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]" -> "this.Out <:< (String :: List[String] :: shapeless.HNil)"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "scala.collection.generic.CanBuildFrom[Nothing,Double,Traversable[Double] with Option[Double]]"
	"io.circe.generic.decoding.ReprDecoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]" -> "scala.collection.generic.CanBuildFrom[Nothing,Double,Traversable[Double] with Option[Double]]"
	"io.circe.Decoder[Option[Double]]" -> "scala.collection.generic.CanBuildFrom[Nothing,Double,Traversable[Double] with Option[Double]]"
	"io.circe.Decoder[Foo]" -> "scala.collection.generic.CanBuildFrom[Nothing,Double,Traversable[Double] with Option[Double]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "scala.collection.generic.CanBuildFrom[Nothing,Double,Traversable[Double] with Option[Double]]"
	"io.circe.Encoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[Qux,K]"
	"shapeless.LabelledGeneric.Aux[Qux,R]" -> "shapeless.DefaultSymbolicLabelling.Aux[Qux,K]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Qux,K]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Qux,K]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Qux,K]"
	"io.circe.Decoder[Foo]" -> "shapeless.DefaultSymbolicLabelling.Aux[Qux,K]"
	"io.circe.generic.decoding.DerivedDecoder[Qux]" -> "shapeless.DefaultSymbolicLabelling.Aux[Qux,K]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Qux]" -> "shapeless.DefaultSymbolicLabelling.Aux[Qux,K]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.DefaultSymbolicLabelling.Aux[Qux,K]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.ReprObjectEncoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[Foo]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.DerivedDecoder[Foo]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[Foo]"
	"io.circe.Decoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('Qux')]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Qux')]"
	"shapeless.LabelledGeneric.Aux[Foo,R]" -> "shapeless.Witness.Aux[Symbol @@ String('Qux')]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Qux')]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Qux')]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('Qux')]"
	"shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]" -> "shapeless.Witness.Aux[Symbol @@ String('Qux')]"
	"io.circe.generic.decoding.DerivedDecoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('Qux')]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Qux')]"
	"io.circe.Encoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('Qux')]"
	"shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Qux')) :: shapeless.HNil,Qux :+: shapeless.CNil]" -> "shapeless.Witness.Aux[Symbol @@ String('Qux')]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[String]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[String]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.DerivedDecoder[String]"
	"io.circe.Encoder[String]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[String]]"
	"io.circe.Encoder[Foo]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[String]]"
	"io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[String]]"
	"io.circe.Encoder[List[String]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[String]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.Encoder[Double]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.Encoder[Double]"
	"io.circe.Encoder[Foo]" -> "io.circe.Encoder[Double]"
	"io.circe.generic.encoding.ReprObjectEncoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]" -> "io.circe.Encoder[Double]"
	"io.circe.Encoder[Option[Double]]" -> "io.circe.Encoder[Double]"
	"io.circe.Encoder[Foo]" -> "shapeless.Generic.Aux[Foo,V]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[Foo,V]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Foo]" -> "shapeless.Generic.Aux[Foo,V]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Generic.Aux[Foo,V]"
	"shapeless.LabelledGeneric.Aux[Foo,R]" -> "shapeless.Generic.Aux[Foo,V]"
	"io.circe.generic.decoding.DerivedDecoder[Foo]" -> "shapeless.Generic.Aux[Foo,V]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Generic.Aux[Foo,V]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[Foo,V]"
	"io.circe.Decoder[Foo]" -> "shapeless.Generic.Aux[Foo,V]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.ReprObjectEncoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('i')],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('d')],Option[Double]] :: shapeless.HNil]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[List[String],R]"
	"io.circe.Decoder[Foo]" -> "shapeless.LabelledGeneric.Aux[List[String],R]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[List[String],R]"
	"io.circe.generic.decoding.DerivedDecoder[List[String]]" -> "shapeless.LabelledGeneric.Aux[List[String],R]"
	"io.circe.Encoder[Foo]" -> "shapeless.LabelledGeneric.Aux[List[String],R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[List[String]]" -> "shapeless.LabelledGeneric.Aux[List[String],R]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[List[String],R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[List[String],R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Qux]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[this.Out]]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Foo]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[this.Out]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[this.Out]]"
	"io.circe.Encoder[Foo]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[this.Out]]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[this.Out]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[this.Out]]"
	"io.circe.generic.encoding.DerivedObjectEncoder[List[String]]" -> "shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[this.Out]]"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]" -> "shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< shapeless.HNil"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< shapeless.HNil"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]" -> "shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< shapeless.HNil"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< shapeless.HNil"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< shapeless.HNil"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< shapeless.HNil"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]" -> "shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< shapeless.HNil"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< shapeless.HNil"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< shapeless.HNil"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]" -> "shapeless.Generic.Aux[scala.collection.immutable.Nil.type,V]"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R]" -> "shapeless.Generic.Aux[scala.collection.immutable.Nil.type,V]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Generic.Aux[scala.collection.immutable.Nil.type,V]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[scala.collection.immutable.Nil.type,V]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Generic.Aux[scala.collection.immutable.Nil.type,V]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]" -> "shapeless.Generic.Aux[scala.collection.immutable.Nil.type,V]"
	"io.circe.Encoder[Foo]" -> "shapeless.Generic.Aux[scala.collection.immutable.Nil.type,V]"
	"io.circe.Decoder[Foo]" -> "shapeless.Generic.Aux[scala.collection.immutable.Nil.type,V]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[scala.collection.immutable.Nil.type,V]"
	"io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "io.circe.Encoder[List[String]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.Encoder[List[String]]"
	"io.circe.Encoder[Foo]" -> "io.circe.Encoder[List[String]]"
	"io.circe.generic.encoding.ReprObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('xs')],List[String]] :: shapeless.HNil]" -> "io.circe.Encoder[List[String]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.Encoder[List[String]]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Qux]" -> "shapeless.Generic.Aux[Qux,V]"
	"io.circe.Decoder[Foo]" -> "shapeless.Generic.Aux[Qux,V]"
	"shapeless.LabelledGeneric.Aux[Qux,R]" -> "shapeless.Generic.Aux[Qux,V]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[Qux,V]"
	"io.circe.generic.decoding.DerivedDecoder[Qux]" -> "shapeless.Generic.Aux[Qux,V]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[Qux,V]"
	"io.circe.Encoder[Foo]" -> "shapeless.Generic.Aux[Qux,V]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Generic.Aux[Qux,V]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Generic.Aux[Qux,V]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]"
	"io.circe.generic.decoding.DerivedDecoder[List[String]]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]"
	"shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('::')) :: (Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]"
	"io.circe.generic.encoding.DerivedObjectEncoder[List[String]]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]"
	"shapeless.LabelledGeneric.Aux[List[String],R]" -> "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String('Nil')) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]" -> "shapeless.Generic.Aux[scala.collection.immutable.::[String],V]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Generic.Aux[scala.collection.immutable.::[String],V]"
	"io.circe.Encoder[Foo]" -> "shapeless.Generic.Aux[scala.collection.immutable.::[String],V]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Generic.Aux[scala.collection.immutable.::[String],V]"
	"io.circe.Decoder[Foo]" -> "shapeless.Generic.Aux[scala.collection.immutable.::[String],V]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[scala.collection.immutable.::[String],V]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]" -> "shapeless.Generic.Aux[scala.collection.immutable.::[String],V]"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]" -> "shapeless.Generic.Aux[scala.collection.immutable.::[String],V]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[scala.collection.immutable.::[String],V]"
	"io.circe.generic.decoding.DerivedDecoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('Bar')]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Bar')]"
	"io.circe.Encoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('Bar')]"
	"io.circe.Decoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('Bar')]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Bar')]"
	"shapeless.LabelledGeneric.Aux[Foo,R]" -> "shapeless.Witness.Aux[Symbol @@ String('Bar')]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Bar')]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('Bar')]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('Bar')]"
	"shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String('Bar')) :: (Symbol @@ String('Qux')) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R]" -> "shapeless.Witness.Aux[Symbol @@ String('Bar')]"
	"io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "scala.collection.immutable.::[String] => Iterable[String]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "scala.collection.immutable.::[String] => Iterable[String]"
	"io.circe.Encoder[Foo]" -> "scala.collection.immutable.::[String] => Iterable[String]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "scala.collection.immutable.::[String] => Iterable[String]"
	"io.circe.Encoder[scala.collection.immutable.::[String]]" -> "scala.collection.immutable.::[String] => Iterable[String]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[Qux]"
	"io.circe.Decoder[Foo]" -> "io.circe.generic.decoding.DerivedDecoder[Qux]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.generic.decoding.DerivedDecoder[Qux]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('d')]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('d')]"
	"shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('i')) :: (Symbol @@ String('d')) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R]" -> "shapeless.Witness.Aux[Symbol @@ String('d')]"
	"shapeless.LabelledGeneric.Aux[Qux,R]" -> "shapeless.Witness.Aux[Symbol @@ String('d')]"
	"io.circe.Encoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('d')]"
	"io.circe.Decoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('d')]"
	"io.circe.generic.decoding.DerivedDecoder[Qux]" -> "shapeless.Witness.Aux[Symbol @@ String('d')]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('d')]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Qux]" -> "shapeless.Witness.Aux[Symbol @@ String('d')]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('d')]"
	"shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('d')) :: shapeless.HNil,Option[Double] :: shapeless.HNil]" -> "shapeless.Witness.Aux[Symbol @@ String('d')]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.Encoder[Bar]"
	"io.circe.generic.encoding.ReprObjectEncoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "io.circe.Encoder[Bar]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.Encoder[Bar]"
	"io.circe.Encoder[Foo]" -> "io.circe.Encoder[Bar]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]"
	"io.circe.Decoder[Foo]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]"
	"io.circe.Encoder[Foo]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]"
	"io.circe.Encoder[Foo]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.Nil.type]]"
	"io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('::')],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Nil')],scala.collection.immutable.Nil.type] :+: shapeless.CNil]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.Nil.type]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.Nil.type]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.Nil.type]]"
	"io.circe.Encoder[scala.collection.immutable.Nil.type]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.Nil.type]]"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]"
	"shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]"
	"io.circe.Encoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]"
	"io.circe.Decoder[Foo]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String('tl$access$1')) :: shapeless.HNil,List[String] :: shapeless.HNil]"
	"io.circe.Encoder[Foo]" -> "shapeless.Generic.Aux[Bar,V]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Generic.Aux[Bar,V]"
	"shapeless.LabelledGeneric.Aux[Bar,R]" -> "shapeless.Generic.Aux[Bar,V]"
	"io.circe.Decoder[Foo]" -> "shapeless.Generic.Aux[Bar,V]"
	"io.circe.generic.encoding.DerivedObjectEncoder[Bar]" -> "shapeless.Generic.Aux[Bar,V]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[Bar,V]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Generic.Aux[Bar,V]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Generic.Aux[Bar,V]"
	"io.circe.generic.decoding.DerivedDecoder[Bar]" -> "shapeless.Generic.Aux[Bar,V]"
	"io.circe.generic.encoding.ReprObjectEncoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Bar')],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('Qux')],Qux] :+: shapeless.CNil]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[Qux]]"
	"io.circe.Encoder[Foo]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[Qux]]"
	"io.circe.Encoder[Qux]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[Qux]]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[Qux]]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.export.Exported[io.circe.ObjectEncoder[Qux]]"
	"io.circe.Encoder[Foo]" -> "io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.Decoder[Foo]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[String]]"
	"io.circe.Decoder[Foo]" -> "io.circe.export.Exported[io.circe.Decoder[String]]"
	"io.circe.Decoder[List[String]]" -> "io.circe.export.Exported[io.circe.Decoder[String]]"
	"io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('head')],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String('tl$access$1')],List[String]] :: shapeless.HNil]" -> "io.circe.export.Exported[io.circe.Decoder[String]]"
	"io.circe.Decoder[String]" -> "io.circe.export.Exported[io.circe.Decoder[String]]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "io.circe.export.Exported[io.circe.Decoder[String]]"
	"io.circe.Encoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('head')]"
	"shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('head')]"
	"io.circe.export.Exported[io.circe.Decoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('head')]"
	"shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String('head')) :: (Symbol @@ String('tl$access$1')) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R]" -> "shapeless.Witness.Aux[Symbol @@ String('head')]"
	"io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]" -> "shapeless.Witness.Aux[Symbol @@ String('head')]"
	"io.circe.Decoder[Foo]" -> "shapeless.Witness.Aux[Symbol @@ String('head')]"
	"shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('head')]"
	"io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]" -> "shapeless.Witness.Aux[Symbol @@ String('head')]"
	"shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R]" -> "shapeless.Witness.Aux[Symbol @@ String('head')]"
	"io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]" -> "shapeless.Witness.Aux[Symbol @@ String('head')]"
 }